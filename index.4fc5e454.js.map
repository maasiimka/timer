{"mappings":"AAEA,MAAMA,EAAQC,SAASC,cAAc,aAC/BC,EAAOF,SAASC,cAAc,YAC9BE,EAAQH,SAASI,iBAAiB,YAClCC,EAAQL,SAASC,cAAc,aAC/BK,EAAYN,SAASC,cAAc,eACnCM,EAAqBP,SAASC,cAAc,WAE5CO,EAAU,CACdC,QAAS,OACTC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAGV,IAAIC,GAAY,EAEhBC,aAAW,KACT,IAAIC,EAAO,IAAIC,KACfb,EAAUc,YAAcF,EAAKG,eAAe,QAASb,KACpD,KAEH,MAAMc,EAAOC,GACJC,OAAOD,GAAOE,SAAS,EAAG,WAG7BC,cACQC,EAAc,IACxBC,KAAKC,KAAOF,EAGdG,cACEF,KAAKG,SAAWH,KAAKC,KAAKG,UAG5BC,eACE1B,EAAmBa,YACjB,kDAC8Bb,EAAb2B,MAAMC,gBAAkB,UAC3CC,IAGFC,eACE9B,EAAmBa,YACjB,oDACFb,EAAmB2B,MAAMC,gBAAkB,UAC3CC,IAGFE,iBAAiBC,GACfX,KAAKY,WAAaC,KAAKC,MAAMH,EAAc,OAC3CX,KAAKe,YAAcrB,EACjBmB,KAAKC,MAAOH,EAAc,MAAyB,OAErDX,KAAKgB,UAAYtB,EACfmB,KAAKC,MAAOH,EAAc,KAAoB,MAEhDX,KAAKiB,WAAavB,EAAImB,KAAKC,MAAOH,EAAc,IAAc,MAE9D,MAAOC,WAACA,EAAUG,YAAEA,EAAWC,UAAEA,EAASC,WAAEA,GAAejB,KAE3DvB,EAAMe,YAAW,GAAMoB,KAAcG,KAAeC,KAAaC,IAGnEC,iBACElB,KAAKD,YAAc,KACnBC,KAAKmB,WAAa9B,aAAW,KAC3BW,KAAKD,YAAcR,KAAK6B,MAExBpB,KAAKqB,kBACJ,KAGLA,gBACErB,KAAKE,cACLF,KAAKW,WAAaX,KAAKG,SAAWH,KAAKD,YACvC,MAAOY,WAACA,GAAeX,KAEvBrB,EAAmBa,YAAc,GACjCb,EAAmB2B,MAAMC,gBAAkB,UACvCI,GAAa,IACfX,KAAKK,eAEIM,EAAa,GAAKA,GAAa,IACxCX,KAAKS,eAIPT,KAAKU,iBAAiBC,IAI1B,IAAIW,EAAS,KAEb,MAaMd,EAAS,KACbpB,GAAY,EACZmC,cAAcD,EAAOH,aAGvBhD,EAAMqD,iBAAiB,SAlBN,KACf,GAAIpC,EACF,OAEFA,GAAY,EACZ,MACMqC,EADc,IAAIlD,GACQmD,KAAKC,GAAOC,OAAOD,EAAGhC,MAAMkC,UACtDC,EAAa,IAAIvC,KAAK,KAAM,KAAMkC,GAClCM,EAAS,IAAIjC,EAAegC,GAClCC,EAAOb,iBACPI,EAASS,KASXzD,EAAKkD,iBAAiB,QAAShB","sources":["src/01-first.js"],"sourcesContent":["import \"./style.css\";\n\nconst start = document.querySelector(\".js-start\");\nconst stop = document.querySelector(\".js-stop\");\nconst input = document.querySelectorAll(\".js-date\");\nconst timer = document.querySelector(\".js-timer\");\nconst validDate = document.querySelector(\".valid-date\");\nconst resultOfValidation = document.querySelector(\".result\");\n\nconst options = {\n  weekday: \"long\",\n  year: \"numeric\",\n  month: \"short\",\n  day: \"numeric\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n};\n\nlet isWorking = false;\n\nsetInterval(() => {\n  let date = new Date();\n  validDate.textContent = date.toLocaleString(\"Uk-uk\", options);\n}, 2000);\n\nconst pad = (value) => {\n  return String(value).padStart(2, \"0\");\n};\n\nclass CountdownTimer {\n  constructor(currentTime = {}) {\n    this.time = currentTime;\n  }\n\n  getUnixTime() {\n    this.unixTime = this.time.getTime();\n  }\n\n  validateTime() {\n    resultOfValidation.textContent =\n      \"!!! Час не валідний, cпробуйте ввести інший !!!\";\n    resultOfValidation.style.backgroundColor = \"#ff0000\";\n    stopTimer();\n  }\n\n  isTimerEnded() {\n    resultOfValidation.textContent =\n      \"Таймер закінчив роботу. Надсилаємо нагадування ;)\";\n    resultOfValidation.style.backgroundColor = \"#008000\";\n    stopTimer();\n  }\n\n  formatResultTime(resultTime) {\n    this.resultDays = Math.floor(resultTime / (1000 * 60 * 60 * 24));\n    this.resultHours = pad(\n      Math.floor((resultTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    this.resulMins = pad(\n      Math.floor((resultTime % (1000 * 60 * 60)) / (1000 * 60))\n    );\n    this.resultSecs = pad(Math.floor((resultTime % (1000 * 60)) / 1000));\n\n    const { resultDays, resultHours, resulMins, resultSecs } = this;\n\n    timer.textContent = `${resultDays}:${resultHours}:${resulMins}:${resultSecs}`;\n  }\n\n  showResultTime() {\n    this.currentTime = null;\n    this.intervalId = setInterval(() => {\n      this.currentTime = Date.now();\n\n      this.substractTime();\n    }, 1000);\n  }\n\n  substractTime() {\n    this.getUnixTime();\n    this.resultTime = this.unixTime - this.currentTime;\n    const { resultTime } = this;\n\n    resultOfValidation.textContent = \"\";\n    resultOfValidation.style.backgroundColor = \"#ffffff\";\n    if (resultTime < -1000) {\n      this.validateTime();\n      return;\n    } else if (resultTime < 0 && resultTime > -1000) {\n      this.isTimerEnded();\n      return;\n    }\n\n    this.formatResultTime(resultTime);\n  }\n}\n\nlet timer2 = null;\n\nconst createTimer = () => {\n  if (isWorking) {\n    return;\n  }\n  isWorking = true;\n  const arrOfInputs = [...input];\n  const arrOfValues = arrOfInputs.map((el) => Number(el.value.trim()));\n  const futureTime = new Date(2022, 1, ...arrOfValues);\n  const timer1 = new CountdownTimer(futureTime);\n  timer1.showResultTime();\n  timer2 = timer1;\n};\n\nconst stopTimer = () => {\n  isWorking = false;\n  clearInterval(timer2.intervalId);\n};\n\nstart.addEventListener(\"click\", createTimer);\nstop.addEventListener(\"click\", stopTimer);\n"],"names":["$1bc3272fbc496cc1$var$start","document","querySelector","$1bc3272fbc496cc1$var$stop","$1bc3272fbc496cc1$var$input","querySelectorAll","$1bc3272fbc496cc1$var$timer","$1bc3272fbc496cc1$var$validDate","$1bc3272fbc496cc1$var$resultOfValidation","$1bc3272fbc496cc1$var$options","weekday","year","month","day","hour","minute","second","$1bc3272fbc496cc1$var$isWorking","setInterval","date","Date","textContent","toLocaleString","$1bc3272fbc496cc1$var$pad","value","String","padStart","$1bc3272fbc496cc1$var$CountdownTimer","currentTime","this","time","getUnixTime","unixTime","getTime","validateTime","style","backgroundColor","$1bc3272fbc496cc1$var$stopTimer","isTimerEnded","formatResultTime","resultTime","resultDays","Math","floor","resultHours","resulMins","resultSecs","showResultTime","intervalId","now","substractTime","$1bc3272fbc496cc1$var$timer2","clearInterval","addEventListener","arrOfValues","map","el","Number","trim","futureTime","timer1"],"version":3,"file":"index.4fc5e454.js.map"}
{"mappings":"AAAO,MAAMA,EAAQC,SAASC,cAAc,aAC/BC,EAAOF,SAASC,cAAc,YAC9BE,EAAQH,SAASI,iBAAiB,YAClCC,EAAQL,SAASC,cAAc,aAC/BK,EAAYN,SAASC,cAAc,eACnCM,EAAqBP,SAASC,cAAc,WAE5CO,EAAU,CACrBC,QAAS,OACTC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WCdGC,EAAOC,GACXC,OAAOD,GAAOE,SAAS,EAAG,WCItBC,cACCC,EAAc,IACxBC,KAAKC,KAAOF,EAGdG,cACEF,KAAKG,SAAWH,KAAKC,KAAKG,UAG5BC,eACEpB,EAAmBqB,YACjB,kDAC8BrB,EAAbsB,MAAMC,gBAAkB,UAC3CC,IAGFC,eACEzB,EAAmBqB,YACjB,oDACFrB,EAAmBsB,MAAMC,gBAAkB,UAC3CC,IAGFE,iBAAiBC,GACfZ,KAAKa,WAAaC,KAAKC,MAAMH,EAAc,OAC3CZ,KAAKgB,YAActB,EACjBoB,KAAKC,MAAOH,EAAc,MAAyB,OAErDZ,KAAKiB,UAAYvB,EACfoB,KAAKC,MAAOH,EAAc,KAAoB,MAEhDZ,KAAKkB,WAAaxB,EAAIoB,KAAKC,MAAOH,EAAc,IAAc,MAE9D,MAAOC,WAACA,EAAUG,YAAEA,EAAWC,UAAEA,EAASC,WAAEA,GAAelB,KAE3DjB,EAAMuB,YAAW,GAAMO,KAAcG,KAAeC,KAAaC,IAGnEC,gBACEnB,KAAKE,cACLF,KAAKY,WAAaZ,KAAKG,SAAWH,KAAKD,YACvC,MAAOa,WAACA,GAAeZ,KAEvBf,EAAmBqB,YAAc,GACjCrB,EAAmBsB,MAAMC,gBAAkB,UACvCI,GAAa,MAAUA,EACzBZ,KAAKK,eAEIO,EAAa,GAAKA,GAAa,IACxCZ,KAAKU,eAIPV,KAAKW,iBAAiBC,GAGxBQ,iBACEpB,KAAKD,YAAc,KACnBC,KAAKqB,WAAaC,aAAW,KAC3BtB,KAAKD,YAAcwB,KAAKC,MAExBxB,KAAKmB,kBACJ,MCjEA,IAAIM,GAAY,EAEnBC,EAAS,KACN,MAYMjB,EAAS,KACpBgB,GAAY,EACZE,cAAcD,EAAOL,aCbvBC,aAAW,KACT,IAAIM,EAAO,IAAIL,KACfvC,EAAUsB,YAAcsB,EAAKC,eAAe,QAAS3C,KACpD,KAKHT,EAAMqD,iBAAiB,SDTC,KACtB,GAAIL,EACF,OAEFA,GAAY,EACZ,MAAMM,EAAc,IAAIlD,GAAOmD,KAAKC,GAAOC,OAAOD,EAAGtC,MAAMwC,UACrDC,EAAa,IAAIb,KAAK,KAAM,KAAMQ,GAClCM,EAAS,IAAIvC,EAAesC,GAClCC,EAAOjB,iBACPM,EAASW,KCCXzD,EAAKkD,iBAAiB,QAASrB","sources":["src/js/consts.js","src/js/pad.js","src/js/class.js","src/js/startOrStopExample.js","src/index.js"],"sourcesContent":["export const start = document.querySelector(\".js-start\");\nexport const stop = document.querySelector(\".js-stop\");\nexport const input = document.querySelectorAll(\".js-date\");\nexport const timer = document.querySelector(\".js-timer\");\nexport const validDate = document.querySelector(\".valid-date\");\nexport const resultOfValidation = document.querySelector(\".result\");\n\nexport const options = {\n  weekday: \"long\",\n  year: \"numeric\",\n  month: \"short\",\n  day: \"numeric\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n};\n","export const pad = (value) => {\n  return String(value).padStart(2, \"0\");\n};\n","import { timer } from \"./consts\";\nimport { resultOfValidation } from \"./consts\";\nimport { pad } from \"./pad\";\nimport { stopTimer } from \"./startOrStopExample\";\n\nexport class CountdownTimer {\n  constructor(currentTime = {}) {\n    this.time = currentTime;\n  }\n\n  getUnixTime() {\n    this.unixTime = this.time.getTime();\n  }\n\n  validateTime() {\n    resultOfValidation.textContent =\n      \"!!! Час не валідний, cпробуйте ввести інший !!!\";\n    resultOfValidation.style.backgroundColor = \"#ff0000\";\n    stopTimer();\n  }\n\n  isTimerEnded() {\n    resultOfValidation.textContent =\n      \"Таймер закінчив роботу. Надсилаємо нагадування ;)\";\n    resultOfValidation.style.backgroundColor = \"#008000\";\n    stopTimer();\n  }\n\n  formatResultTime(resultTime) {\n    this.resultDays = Math.floor(resultTime / (1000 * 60 * 60 * 24));\n    this.resultHours = pad(\n      Math.floor((resultTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    this.resulMins = pad(\n      Math.floor((resultTime % (1000 * 60 * 60)) / (1000 * 60))\n    );\n    this.resultSecs = pad(Math.floor((resultTime % (1000 * 60)) / 1000));\n\n    const { resultDays, resultHours, resulMins, resultSecs } = this;\n\n    timer.textContent = `${resultDays}:${resultHours}:${resulMins}:${resultSecs}`;\n  }\n\n  substractTime() {\n    this.getUnixTime();\n    this.resultTime = this.unixTime - this.currentTime;\n    const { resultTime } = this;\n\n    resultOfValidation.textContent = \"\";\n    resultOfValidation.style.backgroundColor = \"#ffffff\";\n    if (resultTime < -1000 || !resultTime) {\n      this.validateTime();\n      return;\n    } else if (resultTime < 0 && resultTime > -1000) {\n      this.isTimerEnded();\n      return;\n    }\n\n    this.formatResultTime(resultTime);\n  }\n\n  showResultTime() {\n    this.currentTime = null;\n    this.intervalId = setInterval(() => {\n      this.currentTime = Date.now();\n\n      this.substractTime();\n    }, 1000);\n  }\n}\n","import { input } from \"./consts\";\nimport { CountdownTimer } from \"./class\";\nexport let isWorking = false;\n\nlet timer2 = null;\nexport const createTimer = () => {\n  if (isWorking) {\n    return;\n  }\n  isWorking = true;\n  const arrOfValues = [...input].map((el) => Number(el.value.trim()));\n  const futureTime = new Date(2022, 1, ...arrOfValues);\n  const timer1 = new CountdownTimer(futureTime);\n  timer1.showResultTime();\n  timer2 = timer1;\n};\n\nexport const stopTimer = () => {\n  isWorking = false;\n  clearInterval(timer2.intervalId);\n};\n","import \"./style.css\";\nimport { validDate } from \"./js/consts\";\nimport { options } from \"./js/consts\";\nimport { start } from \"./js/consts\";\nimport { stop } from \"./js/consts\";\n\nsetInterval(() => {\n  let date = new Date();\n  validDate.textContent = date.toLocaleString(\"Uk-uk\", options);\n}, 2000);\n\nimport { createTimer } from \"./js/startOrStopExample\";\nimport { stopTimer } from \"./js/startOrStopExample\";\n\nstart.addEventListener(\"click\", createTimer);\nstop.addEventListener(\"click\", stopTimer);\n"],"names":["$7890d3ea761adff8$export$b3571188c770cc5a","document","querySelector","$7890d3ea761adff8$export$fa6813432f753b0d","$7890d3ea761adff8$export$b7e3ae3d7c15e42e","querySelectorAll","$7890d3ea761adff8$export$9dc4ecf953986f04","$7890d3ea761adff8$export$2124646da132b18e","$7890d3ea761adff8$export$e113be141053b7ab","$7890d3ea761adff8$export$41c562ebe57d11e2","weekday","year","month","day","hour","minute","second","$9ee783fbdc6dde24$export$5d04458e2a6c373e","value","String","padStart","$f7a6525590ea97f1$export$5a0af15366b01c51","currentTime","this","time","getUnixTime","unixTime","getTime","validateTime","textContent","style","backgroundColor","$1ecf238c6ba7e872$export$4d41f7386211339a","isTimerEnded","formatResultTime","resultTime","resultDays","Math","floor","resultHours","resulMins","resultSecs","substractTime","showResultTime","intervalId","setInterval","Date","now","$1ecf238c6ba7e872$export$93ddf115638e9293","$1ecf238c6ba7e872$var$timer2","clearInterval","date","toLocaleString","addEventListener","arrOfValues","map","el","Number","trim","futureTime","timer1"],"version":3,"file":"index.1e83d0b7.js.map"}